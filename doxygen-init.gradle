rootProject {
    buildscript {
        repositories {
            jcenter()
        }
        dependencies {
            classpath "org.ysb33r.gradle:doxygen:0.2"
        }
    }
}

projectsEvaluated{
    rootProject {
        // Find default configuration.
        File configFile = new File(rootProject.projectDir, 'Doxyfile')
        if (!configFile.exists()) {
            for (final File dir : startParameter.getInitScripts()) {
                configFile = new File(dir.getParentFile(), 'Doxyfile')
                if (configFile.exists()) {
                    break;
                }
            }
        }
        final String configTemplate = configFile.exists() ? configFile.getAbsolutePath() : null
        apply plugin: "org.ysb33r.doxygen"

        if (null == subprojects || 0 == subprojects.size()) {
            doxygen {
                template configFile.getAbsolutePath()
//                dependsOn project.assembleDebug
                dependsOn assembleRelease
                project_number android.defaultConfig.versionName + " (" + android.defaultConfig.versionCode + ")"
                // project_logo
                output_directory docsDir
                source = [android.sourceSets.main.java.srcDirs]
//                source = [android.sourceSets.main.java.srcDirs, android.sourceSets.androidTest.java.srcDirs, android.sourceSets.test.java.srcDirs]
            }
        } else {
            subprojects {
                doxygen {
                template configFile.getAbsolutePath()
//                    dependsOn project.assembleDebug
                    dependsOn assembleRelease
                    project_number android.defaultConfig.versionName + " (" + android.defaultConfig.versionCode + ")"
                    // project_logo
                    output_directory docsDir
                    source = [android.sourceSets.main.java.srcDirs]
//                    source = [android.sourceSets.main.java.srcDirs, android.sourceSets.androidTest.java.srcDirs, android.sourceSets.test.java.srcDirs]
                }
            }
        }
    }
}
